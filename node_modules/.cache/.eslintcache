[{"C:\\Users\\ASUS\\Downloads\\go_projects\\FileSharing\\client\\src\\index.js":"1","C:\\Users\\ASUS\\Downloads\\go_projects\\FileSharing\\client\\src\\App.js":"2","C:\\Users\\ASUS\\Downloads\\go_projects\\FileSharing\\client\\src\\reportWebVitals.js":"3","C:\\Users\\ASUS\\Downloads\\go_projects\\FileSharing\\client\\src\\services\\api.js":"4"},{"size":535,"mtime":1689057197572,"results":"5","hashOfConfig":"6"},{"size":1307,"mtime":1688997447111,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1688976351980,"results":"8","hashOfConfig":"6"},{"size":346,"mtime":1689140582574,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xwjgpi",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ASUS\\Downloads\\go_projects\\FileSharing\\client\\src\\index.js",[],[],"C:\\Users\\ASUS\\Downloads\\go_projects\\FileSharing\\client\\src\\App.js",["23"],[],"import { useRef, useState, useEffect } from 'react';\nimport './App.css';\nimport { uploadFile } from './services/api';\n\nfunction App() {\n  const [file,setFile] = useState('');\n  const [result, setResult] = useState('');\n  const fileInputRef = useRef();\n  const logo = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQWcOhU4Ej0qKpZrjffn3KwbyD9quINYnlCrw&usqp=CAU\";  \n  useEffect(() => {\n    const getImage = async () => {\n      if(file){\n        const data = new FormData();\n        data.append(\"name\", file.name);\n        data.append(\"file\",file);\n        let response = await uploadFile(data);\n        console.log(\"hello\")\n        setResult(response.path);\n      }\n    }\n    getImage();\n  },[file]);\n  const onUploadClick = () => {\n    fileInputRef.current.click();\n  }\n  console.log(file)\n  return (\n   <div className=\"container\">\n    <img src={logo} alt=\"banner\" />\n    <div className=\"wrapper\">\n      <h1>Simple File Sharing</h1>\n      <p>Upload And Share the download link</p>\n      <button onClick={() => onUploadClick()}>Upload</button>\n      <input type=\"file\" \n        ref={fileInputRef}\n        style={{ display: 'none' }}\n        onChange={(e) => setFile(e.target.files[0])}\n      />\n        <a href={result} target=\"_blank\">{result}</a>\n    </div>\n   </div>\n  );\n}\n\nexport default App;\n\n\n\n","C:\\Users\\ASUS\\Downloads\\go_projects\\FileSharing\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\ASUS\\Downloads\\go_projects\\FileSharing\\client\\src\\services\\api.js",[],[],{"ruleId":"24","severity":1,"message":"25","line":39,"column":9,"nodeType":"26","messageId":"27","endLine":39,"endColumn":42,"fix":"28"},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"29","text":"30"},[1241,1241]," rel=\"noreferrer\""]